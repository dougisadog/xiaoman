apply plugin: 'com.android.application'

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    //compile project(':PushSDK')
    compile project(':BDIntegrationSDK_LibProject')
    compile 'com.google.code.gson:gson:2.7'
    //compile 'com.android.support:multidex:1.0.0'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:recyclerview-v7:23.2.1'
    compile 'com.umeng.analytics:analytics:6.1.2'
    compile project(':PushSDK')
    compile 'com.android.support:support-v4:23.2.1'
    compile 'org.kymjs.kjframe:kjframe:2.6'
    compile group: 'com.github.bumptech.glide', name: 'glide', version: '3.7.0'
}

android {
    compileSdkVersion 23
    buildToolsVersion '25.0.0'
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    defaultConfig {
        applicationId "com.nangua.xiaomanjflc"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 10000
        versionName "1.0.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 自定义输出配置
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "xiaomanjf_p2p_release_v${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        xiaomi {
            applicationId = "com.nangua.xiaomanjflc"
        }
        baidu {
            applicationId = "com.nangua.xiaomanjflc"
        }
        yyb {
            applicationId = "com.nangua.xiaomanjflc"
        }
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name];
    }

    packagingOptions {
//        exclude('META-INF/DEPENDENCIES')
//        exclude('META-INF/NOTICE')
        exclude('META-INF/LICENSE')
    }

    lintOptions {
        abortOnError false
    }
    dexOptions {
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}
